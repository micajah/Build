IF EXISTS (SELECT name FROM master.dbo.sysdatabases WHERE name = N'et_temp') DROP DATABASE [et_temp]
The CREATE DATABASE process is allocating 28.00 MB on disk
'et_temp_schema'.
The CREATE DATABASE process is allocating 285.00 MB on disk
'et_temp_schema_Log'.

CREATE DATABASE [et_temp]  ON (NAME = N'et_temp_schema', FILENAME = N'C:\Temp\et_temp_Data.mdf' , SIZE = 28, FILEGROWTH = 10%) LOG ON (NAME = N'et_temp_schema_Log', FILENAME = N'C:\Temp\et_temp_log.ldf' , SIZE = 285, FILEGROWTH = 10%) COLLATE SQL_Latin1_General_CP1_CI_AS
exec sp_dboption N'et_temp', N'autoclose', N'false'
exec sp_dboption N'et_temp', N'bulkcopy', N'false'
exec sp_dboption N'et_temp', N'trunc. log', N'false'
exec sp_dboption N'et_temp', N'torn page detection', N'false'
exec sp_dboption N'et_temp', N'read only', N'false'
exec sp_dboption N'et_temp', N'dbo use', N'false'
exec sp_dboption N'et_temp', N'single', N'false'
exec sp_dboption N'et_temp', N'autoshrink', N'false'
exec sp_dboption N'et_temp', N'ANSI null default', N'false'
exec sp_dboption N'et_temp', N'recursive triggers', N'false'
exec sp_dboption N'et_temp', N'ANSI nulls', N'false'
exec sp_dboption N'et_temp', N'concat null yields null', N'false'
exec sp_dboption N'et_temp', N'cursor close on commit', N'false'
exec sp_dboption N'et_temp', N'default to local cursor', N'false'
exec sp_dboption N'et_temp', N'quoted identifier', N'false'
exec sp_dboption N'et_temp', N'ANSI warnings', N'false'
exec sp_dboption N'et_temp', N'auto create statistics', N'true'
exec sp_dboption N'et_temp', N'auto update statistics', N'true'
if( ( (@@microsoftversion / power(2, 24) = 8) and (@@microsoftversion & 0xffff >= 724) ) or ( (@@microsoftversion / power(2, 24) = 7) and (@@microsoftversion & 0xffff >= 1082) ) ) exec sp_dboption N'et_temp', N'db chaining', N'false'

use [et_temp]

if not exists (select * from dbo.sysusers where name = N'guest' and hasdbaccess = 1)
	EXEC sp_grantdbaccess N'guest'

use [et_temp] 


CREATE TABLE [dbo].[Book] (
	[Book_ID] [int] IDENTITY (1, 1) NOT NULL ,
	[Author_ID] [int] NULL ,
	[Name] [char] (10) COLLATE Cyrillic_General_CI_AS NULL ,
	[Date] [datetime] NULL 
) ON [PRIMARY]


ALTER TABLE [dbo].[Book] ADD 
	CONSTRAINT [PK_Book] PRIMARY KEY  CLUSTERED 
	(
		[Book_ID]
	)  ON [PRIMARY] 


CREATE TABLE [dbo].[Author] (
	[Author_ID] [int] IDENTITY (1, 1) NOT NULL ,
	[Name] [nvarchar] (50) COLLATE Cyrillic_General_CI_AS NULL 
) ON [PRIMARY]


ALTER TABLE [dbo].[Author] ADD 
	CONSTRAINT [PK_Author] PRIMARY KEY  CLUSTERED 
	(
		[Author_ID]
	)  ON [PRIMARY] 


CREATE TABLE [dbo].[MC_DBVersion]
	(
	Version int NOT NULL,
	GUID nvarchar(50) NOT NULL,
	AddDate datetime NULL
	)  ON [PRIMARY]

use [et_temp] 
use [et_temp]

ALTER TABLE dbo.Book WITH NOCHECK ADD CONSTRAINT
	FK_Book_Author FOREIGN KEY
	(
	Author_ID
	) REFERENCES dbo.Author
	(
	Author_ID
	)
use [et_temp]
use [et_temp]
use [et_temp]

CREATE FUNCTION dbo.SecondUDF ()
RETURNS int AS
BEGIN 
DECLARE @iValue int
	SELECT @iValue = dbo.FirstUDF('225')	
RETURN @iValue	
END
 
use [et_temp]

CREATE FUNCTION dbo.FirstUDF(@sValue as varchar(8000))
RETURNS int AS
BEGIN 
	DECLARE @iValue int

	SELECT @iValue = case when @sValue like '%[^0-9]%' then NULL else convert(int, @sValue) end
	
	RETURN @iValue
END
 
use [et_temp]
Msg 208, Level 16, State 1, Server LARGO, Procedure View2, Line 4
Invalid object name 'dbo.View1'.

CREATE VIEW dbo.View2
AS 
SELECT * FROM dbo.View1
use [et_temp]

CREATE VIEW dbo.View1 AS SELECT dbo.FirstUDF('255') AS S1
use [et_temp]

CREATE VIEW dbo.View2
AS 
SELECT * FROM dbo.View1
 
use [et_temp]
Cannot add rows to sysdepends for the current stored procedure because
it depends on the missing object 'dbo.FIRSTPRC'. The stored procedure
will still be created.


CREATE PROCEDURE dbo.SECONDPRC
as
EXEC dbo.FIRSTPRC
if @@error <>0 
begin
	raiserror ('Procedure SECONDPRC Error',16,1)
end
  
use [et_temp]


CREATE PROCEDURE dbo.FIRSTPRC
as
if @@error <>0 
begin
	raiserror ('Procedure FIRSTPRC Error',16,1)
end
 
use [et_temp] 

CREATE TRIGGER AUTHOR_UPDATE on dbo.Author for update as
if @@error <>0 
begin
	raiserror ('Trigger Author Error',16,1)
end
use [et_temp]

INSERT INTO Author VALUES ('T. Schevchenko')
(1 row affected)
Deleting database file 'C:\Temp\et_temp_log.ldf'.
Deleting database file 'C:\Temp\et_temp_Data.mdf'.
IF EXISTS (SELECT name FROM master.dbo.sysdatabases WHERE name = N'et_temp') DROP DATABASE [et_temp]
use [et_test_db]
--
-- Script To Create dbo.Book Table In Largo.et_test_db
-- Generated Thursday, November 29, 2007, at 01:52 AM
--
-- Please backup Largo.et_test_db before executing this script
--


BEGIN TRANSACTION
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
Creating dbo.Book Table

PRINT 'Creating dbo.Book Table'

SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, QUOTED_IDENTIFIER, CONCAT_NULL_YIELDS_NULL ON

SET NUMERIC_ROUNDABORT OFF

CREATE TABLE [dbo].[Book] (
   [Book_ID] [int] IDENTITY (1, 1) NOT NULL,
   [Author_ID] [int] NULL,
   [Name] [char] (10) NULL,
   [Date] [datetime] NULL
)

IF @@ERROR <> 0
   IF @@TRANCOUNT = 1 ROLLBACK TRANSACTION

IF @@TRANCOUNT = 1
   ALTER TABLE [dbo].[Book] ADD CONSTRAINT [PK_Book] PRIMARY KEY CLUSTERED ([Book_ID])

IF @@ERROR <> 0
   IF @@TRANCOUNT = 1 ROLLBACK TRANSACTION
dbo.Book Table Added Successfully

IF @@TRANCOUNT = 1
BEGIN
   PRINT 'dbo.Book Table Added Successfully'
   COMMIT TRANSACTION
END ELSE
BEGIN
   PRINT 'Failed To Add dbo.Book Table'
END


--
-- Script To Create dbo.FirstUDF Function In Largo.et_test_db
-- Generated Thursday, November 29, 2007, at 01:52 AM
--
-- Please backup Largo.et_test_db before executing this script
--


BEGIN TRANSACTION
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
Creating dbo.FirstUDF Function

PRINT 'Creating dbo.FirstUDF Function'

SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, QUOTED_IDENTIFIER, CONCAT_NULL_YIELDS_NULL ON

SET NUMERIC_ROUNDABORT OFF

SET QUOTED_IDENTIFIER OFF
exec('CREATE FUNCTION dbo.FirstUDF(@sValue as varchar(8000))
RETURNS int AS
BEGIN 
	DECLARE @iValue int

	SELECT @iValue = case when @sValue like ''%[^0-9]%'' then NULL else convert(int, @sValue) end
	
	RETURN @iValue
END')
SET QUOTED_IDENTIFIER ON

IF @@ERROR <> 0
   IF @@TRANCOUNT = 1 ROLLBACK TRANSACTION
dbo.FirstUDF Function Added Successfully

IF @@TRANCOUNT = 1
BEGIN
   PRINT 'dbo.FirstUDF Function Added Successfully'
   COMMIT TRANSACTION
END ELSE
BEGIN
   PRINT 'Failed To Add dbo.FirstUDF Function'
END

--
-- Script To Create dbo.SecondUDF Function In Largo.et_test_db
-- Generated Thursday, November 29, 2007, at 01:52 AM
--
-- Please backup Largo.et_test_db before executing this script
--


BEGIN TRANSACTION
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
Creating dbo.SecondUDF Function

PRINT 'Creating dbo.SecondUDF Function'

SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, QUOTED_IDENTIFIER, CONCAT_NULL_YIELDS_NULL ON

SET NUMERIC_ROUNDABORT OFF

SET QUOTED_IDENTIFIER OFF
exec('CREATE FUNCTION dbo.SecondUDF ()
RETURNS int AS
BEGIN 
DECLARE @iValue int
	SELECT @iValue = dbo.FirstUDF(''225'')	
RETURN @iValue	
END')
SET QUOTED_IDENTIFIER ON

IF @@ERROR <> 0
   IF @@TRANCOUNT = 1 ROLLBACK TRANSACTION
dbo.SecondUDF Function Added Successfully

IF @@TRANCOUNT = 1
BEGIN
   PRINT 'dbo.SecondUDF Function Added Successfully'
   COMMIT TRANSACTION
END ELSE
BEGIN
   PRINT 'Failed To Add dbo.SecondUDF Function'
END

--
-- Script To Create dbo.View1 View In Largo.et_test_db
-- Generated Thursday, November 29, 2007, at 01:52 AM
--
-- Please backup Largo.et_test_db before executing this script
--


BEGIN TRANSACTION
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
Creating dbo.View1 View

PRINT 'Creating dbo.View1 View'

SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, QUOTED_IDENTIFIER, CONCAT_NULL_YIELDS_NULL ON

SET NUMERIC_ROUNDABORT OFF

SET QUOTED_IDENTIFIER OFF
exec('CREATE VIEW dbo.View1 AS SELECT dbo.FirstUDF(''255'') AS S1')
SET QUOTED_IDENTIFIER ON

IF @@ERROR <> 0
   IF @@TRANCOUNT = 1 ROLLBACK TRANSACTION
dbo.View1 View Added Successfully

IF @@TRANCOUNT = 1
BEGIN
   PRINT 'dbo.View1 View Added Successfully'
   COMMIT TRANSACTION
END ELSE
BEGIN
   PRINT 'Failed To Add dbo.View1 View'
END

--
-- Script To Create dbo.View2 View In Largo.et_test_db
-- Generated Thursday, November 29, 2007, at 01:52 AM
--
-- Please backup Largo.et_test_db before executing this script
--


BEGIN TRANSACTION
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
Creating dbo.View2 View

PRINT 'Creating dbo.View2 View'

SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, QUOTED_IDENTIFIER, CONCAT_NULL_YIELDS_NULL ON

SET NUMERIC_ROUNDABORT OFF

SET QUOTED_IDENTIFIER OFF
exec('CREATE VIEW dbo.View2
AS 
SELECT * FROM dbo.View1')
SET QUOTED_IDENTIFIER ON

IF @@ERROR <> 0
   IF @@TRANCOUNT = 1 ROLLBACK TRANSACTION
dbo.View2 View Added Successfully

IF @@TRANCOUNT = 1
BEGIN
   PRINT 'dbo.View2 View Added Successfully'
   COMMIT TRANSACTION
END ELSE
BEGIN
   PRINT 'Failed To Add dbo.View2 View'
END

--
-- Script To Create dbo.FIRSTPRC Procedure In Largo.et_test_db
-- Generated Thursday, November 29, 2007, at 01:52 AM
--
-- Please backup Largo.et_test_db before executing this script
--


BEGIN TRANSACTION
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
Creating dbo.FIRSTPRC Procedure

PRINT 'Creating dbo.FIRSTPRC Procedure'

SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, QUOTED_IDENTIFIER, CONCAT_NULL_YIELDS_NULL ON

SET NUMERIC_ROUNDABORT OFF

SET QUOTED_IDENTIFIER OFF
exec('CREATE PROCEDURE dbo.FIRSTPRC
as
if @@error <>0 
begin
	raiserror (''Procedure FIRSTPRC Error'',16,1)
end')
SET QUOTED_IDENTIFIER ON

IF @@ERROR <> 0
   IF @@TRANCOUNT = 1 ROLLBACK TRANSACTION
dbo.FIRSTPRC Procedure Added Successfully

IF @@TRANCOUNT = 1
BEGIN
   PRINT 'dbo.FIRSTPRC Procedure Added Successfully'
   COMMIT TRANSACTION
END ELSE
BEGIN
   PRINT 'Failed To Add dbo.FIRSTPRC Procedure'
END

--
-- Script To Create dbo.SECONDPRC Procedure In Largo.et_test_db
-- Generated Thursday, November 29, 2007, at 01:52 AM
--
-- Please backup Largo.et_test_db before executing this script
--


BEGIN TRANSACTION
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
Creating dbo.SECONDPRC Procedure

PRINT 'Creating dbo.SECONDPRC Procedure'

SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, QUOTED_IDENTIFIER, CONCAT_NULL_YIELDS_NULL ON

SET NUMERIC_ROUNDABORT OFF

SET QUOTED_IDENTIFIER OFF
exec('CREATE PROCEDURE dbo.SECONDPRC
as
EXEC dbo.FIRSTPRC
if @@error <>0 
begin
	raiserror (''Procedure SECONDPRC Error'',16,1)
end')
SET QUOTED_IDENTIFIER ON

IF @@ERROR <> 0
   IF @@TRANCOUNT = 1 ROLLBACK TRANSACTION
dbo.SECONDPRC Procedure Added Successfully

IF @@TRANCOUNT = 1
BEGIN
   PRINT 'dbo.SECONDPRC Procedure Added Successfully'
   COMMIT TRANSACTION
END ELSE
BEGIN
   PRINT 'Failed To Add dbo.SECONDPRC Procedure'
END

--
-- Script To Create dbo.Book Table In Largo.et_test_db
-- Generated Thursday, November 29, 2007, at 01:52 AM
--
-- Please backup Largo.et_test_db before executing this script
--


BEGIN TRANSACTION
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
Creating dbo.Book Table

PRINT 'Creating dbo.Book Table'

IF @@ERROR <> 0
   IF @@TRANCOUNT = 1 ROLLBACK TRANSACTION

IF @@TRANCOUNT = 1
   IF NOT EXISTS (SELECT name FROM sysobjects WHERE name = N'FK_Book_Author')
      ALTER TABLE [dbo].[Book] ADD CONSTRAINT [FK_Book_Author] FOREIGN KEY ([Author_ID]) REFERENCES [dbo].[Author] ([Author_ID])

IF @@ERROR <> 0
   IF @@TRANCOUNT = 1 ROLLBACK TRANSACTION
dbo.Book Table Added Successfully

IF @@TRANCOUNT = 1
BEGIN
   PRINT 'dbo.Book Table Added Successfully'
   COMMIT TRANSACTION
END ELSE
BEGIN
   PRINT 'Failed To Add dbo.Book Table'
END

